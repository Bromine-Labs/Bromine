name: CI

on:
  workflow_dispatch:
  push:
    branches: [main]

permissions:
  contents: read
  pages: write
  id-token: write

env:
  BUILD_PATH: "."

jobs:
  lint:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Cache Bun modules
        uses: actions/cache@v3
        with:
          path: ~/.bun/deps # or the actual bun cache directory, verify below
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install deps
        run: bun install
        working-directory: ${{ env.BUILD_PATH }}

      - name: Check
        run: bun run check
        working-directory: ${{ env.BUILD_PATH }}

      - name: Lint Dockerfile
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile

  test:
    name: Build
    needs: [lint]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Install dependencies with Bun
        run: bun install
        working-directory: ${{ env.BUILD_PATH }}

      - name: Build with Astro
        run: |
          bun run build
        working-directory: ${{ env.BUILD_PATH }}

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ env.BUILD_PATH }}/dist

  dockerci:
    name: Docker CI
    needs: [lint, test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set image tag
        run: echo "IMAGE_TAG=$(date +%s)" >> $GITHUB_ENV

      - name: Build Docker image
        run: docker build . --file Dockerfile --tag ghcr.io/coding4hours/bromine:$IMAGE_TAG

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: "coding4Hours"
          password: ${{ secrets.TOKEN }}

      - name: Push Docker container
        run: docker push ghcr.io/coding4hours/bromine:$IMAGE_TAG

    deploy:
      name: Deploy
      needs: [lint, test]
      runs-on: ubuntu-latest
      concurrency:
        group: "pages"
        cancel-in-progress: false
      steps:
        - name: Checkout
          uses: actions/checkout@v4

        - name: Install Bun
          uses: oven-sh/setup-bun@v1
          with:
            bun-version: latest

        - name: Install dependencies with Bun
          run: bun install
          working-directory: ${{ env.BUILD_PATH }}

        - name: Build with Astro
          run: bun run build
          working-directory: ${{ env.BUILD_PATH }}

        - name: Deploy
          id: deployment
          uses: actions/deploy-pages@v4

  release:
    name: Release on Tag
    runs-on: ubuntu-latest
    needs: [lint, build]
    if: github.ref_type == 'tag'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies with Bun
        run: bun install
        working-directory: ${{ env.BUILD_PATH }}

      - name: Build with Astro
        run: |
          bun run build
        working-directory: ${{ env.BUILD_PATH }}

      - name: Archive Build Output
        run: |
          cd ${{ env.BUILD_PATH }}/dist
          zip -r ../../build.zip ./
          cd -

      - name: Create GitHub Release and Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            build.zip
